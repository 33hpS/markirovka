import * as React from 'react';
import { useState, useEffect } from 'react';

import { dataService } from '../services/dataService';

interface ProductionStats {
  totalJobs: number;
  completedJobs: number;
  failedJobs: number;
  pendingJobs: number;
  totalQuantity: number;
  directPrints: number;
  pdfExports: number;
}

const ReportsInteractive: React.FC = () => {
  const [dateRange, setDateRange] = useState('7d');
  const [reportType, setReportType] = useState('production');
  const [stats, setStats] = useState<ProductionStats | null>(null);
  const [_statsLoading, setStatsLoading] = useState(true);
  const [_statsError, setStatsError] = useState<string | null>(null);

  useEffect(() => {
    let isMounted = true;

    const loadStats = async () => {
      try {
        setStatsLoading(true);
        setStatsError(null);

        const now = new Date();
        const daysMap = { '7d': 7, '30d': 30, '90d': 90 };
        const days = daysMap[dateRange as keyof typeof daysMap] ?? 7;
        const dateFrom = new Date(now.getTime() - days * 24 * 60 * 60 * 1000)
          .toISOString()
          .split('T')[0];

        const data = await dataService.getProductionStats(dateFrom);
        if (!isMounted) return;

        setStats(data);
      } catch (err) {
        if (!isMounted) return;
        setStatsError(
          err instanceof Error ? err.message : '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏'
        );
      } finally {
        if (isMounted) setStatsLoading(false);
      }
    };

    loadStats();

    return () => {
      isMounted = false;
    };
  }, [dateRange]);

  const totalProduced = stats?.totalQuantity ?? 0;
  const totalRejected = stats?.failedJobs ?? 0;
  const avgEfficiency = stats
    ? ((stats.completedJobs / (stats.totalJobs || 1)) * 100).toFixed(1)
    : '0';

  return (
    <div className='w-full min-h-screen bg-gray-50 dark:bg-gray-900 p-6'>
      <div className='flex justify-between items-center mb-6'>
        <h1 className='text-3xl font-bold'>–û—Ç—á—ë—Ç—ã –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞</h1>
        <div className='flex gap-3'>
          <select
            value={dateRange}
            onChange={e => setDateRange(e.target.value)}
            className='px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500'
          >
            <option value='7d'>–ü–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π</option>
            <option value='30d'>–ü–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π</option>
            <option value='90d'>–ü–æ—Å–ª–µ–¥–Ω–∏–µ 90 –¥–Ω–µ–π</option>
          </select>
          <button className='px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-500'>
            üìä –≠–∫—Å–ø–æ—Ä—Ç –æ—Ç—á—ë—Ç–∞
          </button>
        </div>
      </div>

      {/* KPI Cards */}
      <div className='grid md:grid-cols-4 gap-6 mb-8'>
        <div className='bg-white p-6 rounded-lg shadow border'>
          <div className='flex items-center'>
            <div className='p-2 bg-blue-100 rounded-md'>
              <div className='w-6 h-6 bg-blue-600 rounded'></div>
            </div>
            <div className='ml-4'>
              <div className='text-2xl font-bold text-blue-600'>
                {totalProduced.toLocaleString()}
              </div>
              <div className='text-sm text-gray-600'>–í—Å–µ–≥–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–æ</div>
            </div>
          </div>
        </div>

        <div className='bg-white p-6 rounded-lg shadow border'>
          <div className='flex items-center'>
            <div className='p-2 bg-red-100 rounded-md'>
              <div className='w-6 h-6 bg-red-600 rounded'></div>
            </div>
            <div className='ml-4'>
              <div className='text-2xl font-bold text-red-600'>
                {totalRejected.toLocaleString()}
              </div>
              <div className='text-sm text-gray-600'>–ù–µ—É–¥–∞—á–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π</div>
            </div>
          </div>
        </div>

        <div className='bg-white p-6 rounded-lg shadow border'>
          <div className='flex items-center'>
            <div className='p-2 bg-green-100 rounded-md'>
              <div className='w-6 h-6 bg-green-600 rounded'></div>
            </div>
            <div className='ml-4'>
              <div className='text-2xl font-bold text-green-600'>
                {avgEfficiency}%
              </div>
              <div className='text-sm text-gray-600'>
                –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏
              </div>
            </div>
          </div>
        </div>

        <div className='bg-white p-6 rounded-lg shadow border'>
          <div className='flex items-center'>
            <div className='p-2 bg-purple-100 rounded-md'>
              <div className='w-6 h-6 bg-purple-600 rounded'></div>
            </div>
            <div className='ml-4'>
              <div className='text-2xl font-bold text-purple-600'>
                {stats?.totalJobs ?? 0}
              </div>
              <div className='text-sm text-gray-600'>–í—Å–µ–≥–æ –∑–∞–¥–∞–Ω–∏–π</div>
            </div>
          </div>
        </div>
      </div>

      <div className='grid lg:grid-cols-3 gap-6'>
        {/* Production Chart */}
        <div className='lg:col-span-2 bg-white rounded-lg shadow'>
          <div className='p-6 border-b'>
            <div className='flex justify-between items-center'>
              <h2 className='text-lg font-medium'>–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞</h2>
              <div className='flex gap-2'>
                <button
                  onClick={() => setReportType('production')}
                  className={`px-3 py-1 text-sm rounded ${
                    reportType === 'production'
                      ? 'bg-blue-600 text-white'
                      : 'bg-gray-100 text-gray-600 hover:bg-gray-200'
                  }`}
                >
                  –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ
                </button>
                <button
                  onClick={() => setReportType('quality')}
                  className={`px-3 py-1 text-sm rounded ${
                    reportType === 'quality'
                      ? 'bg-blue-600 text-white'
                      : 'bg-gray-100 text-gray-600 hover:bg-gray-200'
                  }`}
                >
                  –ö–∞—á–µ—Å—Ç–≤–æ
                </button>
              </div>
            </div>
          </div>
          <div className='p-6'>
            <div className='py-12 text-center text-gray-500'>
              –î–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –¥–Ω—è–º –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π
              –≤–µ—Ä—Å–∏–∏.
              <br />
              –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–µ—Ä—Ö–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.
            </div>
          </div>
        </div>

        {/* Recent Activity */}
        <div className='bg-white rounded-lg shadow'>
          <div className='p-6 border-b'>
            <h2 className='text-lg font-medium'>–ù–µ–¥–∞–≤–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</h2>
          </div>
          <div className='p-6'>
            <div className='space-y-4'>
              <div className='flex gap-3'>
                <div className='w-8 h-8 bg-green-100 rounded-full flex items-center justify-center'>
                  <div className='w-3 h-3 bg-green-600 rounded-full'></div>
                </div>
                <div className='flex-1'>
                  <div className='text-sm font-medium'>
                    –ü–∞—Ä—Ç–∏—è B003 –∑–∞–≤–µ—Ä—à–µ–Ω–∞
                  </div>
                  <div className='text-xs text-gray-500'>5 –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥</div>
                </div>
              </div>

              <div className='flex gap-3'>
                <div className='w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center'>
                  <div className='w-3 h-3 bg-blue-600 rounded-full'></div>
                </div>
                <div className='flex-1'>
                  <div className='text-sm font-medium'>
                    –°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è –ø–∞—Ä—Ç–∏—è B004
                  </div>
                  <div className='text-xs text-gray-500'>1 —á–∞—Å –Ω–∞–∑–∞–¥</div>
                </div>
              </div>

              <div className='flex gap-3'>
                <div className='w-8 h-8 bg-yellow-100 rounded-full flex items-center justify-center'>
                  <div className='w-3 h-3 bg-yellow-600 rounded-full'></div>
                </div>
                <div className='flex-1'>
                  <div className='text-sm font-medium'>
                    –ü–∞—Ä—Ç–∏—è B002 –Ω–∞ –∫–æ–Ω—Ç—Ä–æ–ª–µ
                  </div>
                  <div className='text-xs text-gray-500'>2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥</div>
                </div>
              </div>

              <div className='flex gap-3'>
                <div className='w-8 h-8 bg-purple-100 rounded-full flex items-center justify-center'>
                  <div className='w-3 h-3 bg-purple-600 rounded-full'></div>
                </div>
                <div className='flex-1'>
                  <div className='text-sm font-medium'>
                    –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ 150 QR-–∫–æ–¥–æ–≤
                  </div>
                  <div className='text-xs text-gray-500'>3 —á–∞—Å–∞ –Ω–∞–∑–∞–¥</div>
                </div>
              </div>

              <div className='flex gap-3'>
                <div className='w-8 h-8 bg-red-100 rounded-full flex items-center justify-center'>
                  <div className='w-3 h-3 bg-red-600 rounded-full'></div>
                </div>
                <div className='flex-1'>
                  <div className='text-sm font-medium'>
                    –û—Ç–∫–ª–æ–Ω–µ–Ω–∞ –ø–∞—Ä—Ç–∏—è B001
                  </div>
                  <div className='text-xs text-gray-500'>1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥</div>
                </div>
              </div>
            </div>

            <div className='mt-6 pt-4 border-t'>
              <button className='w-full px-3 py-2 text-sm text-indigo-600 hover:text-indigo-800'>
                –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é ‚Üí
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ReportsInteractive;
